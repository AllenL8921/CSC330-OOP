//Our tree class is going to also implement Comparable

//Current day Comparable uses generics like ArrayList
//Comparable<ObjectType>

//The method for Comparable is:
//public int compareTo(Object other);
public class Tree implements IEntity, Comparable<Tree>{
	
	private double rootLength;
	private boolean hasLeaves;

	public Tree(double d, boolean b) {
		// TODO Auto-generated constructor stub
		setRootLength(d);
		setHasLeaves(b);
	}

	public double getRootLength() {
		return rootLength;
	}

	public void setRootLength(double rootLength) {
		this.rootLength = rootLength;
	}

	public boolean isHasLeaves() {
		return hasLeaves;
	}

	public void setHasLeaves(boolean hasLeaves) {
		this.hasLeaves = hasLeaves;
	}
	
	//Let's define act for the Tree class
	public void act() {
		// TODO Auto-generated method stub
		System.out.println("Swaying in the wind.");
		
	}

	@Override
	public int compareTo(Tree o) {
		// A Tree is "greater than" another Tree if its rootLength is greater the the other's
		
		if(this.rootLength > other.rootLength) {
			return 1;
		}
		
		return 0;
	}
	
}
